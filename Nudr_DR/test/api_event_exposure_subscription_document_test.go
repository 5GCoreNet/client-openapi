/*
Nudr_DataRepository API OpenAPI file

Testing EventExposureSubscriptionDocumentApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package Nudr_DR

import (
    "context"
    "github.com/stretchr/testify/assert"
    "github.com/stretchr/testify/require"
    "testing"
    openapiclient "./openapi"
)

func Test_Nudr_DR_EventExposureSubscriptionDocumentApiService(t *testing.T) {

    configuration := openapiclient.NewConfiguration()
    apiClient := openapiclient.NewAPIClient(configuration)

    t.Run("Test EventExposureSubscriptionDocumentApiService ModifyEesubscription", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var ueId string
        var subsId string

        resp, httpRes, err := apiClient.EventExposureSubscriptionDocumentApi.ModifyEesubscription(context.Background(), ueId, subsId).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test EventExposureSubscriptionDocumentApiService QueryeeSubscription", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var ueId string
        var subsId string

        resp, httpRes, err := apiClient.EventExposureSubscriptionDocumentApi.QueryeeSubscription(context.Background(), ueId, subsId).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test EventExposureSubscriptionDocumentApiService RemoveeeSubscriptions", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var ueId string
        var subsId string

        resp, httpRes, err := apiClient.EventExposureSubscriptionDocumentApi.RemoveeeSubscriptions(context.Background(), ueId, subsId).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test EventExposureSubscriptionDocumentApiService UpdateEesubscriptions", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var ueId string
        var subsId string

        resp, httpRes, err := apiClient.EventExposureSubscriptionDocumentApi.UpdateEesubscriptions(context.Background(), ueId, subsId).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

}
