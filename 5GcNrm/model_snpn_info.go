/*
3GPP 5GC NRM

OAS 3.0.1 specification of the 5GC NRM Â© 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package 5GcNrm

import (
	"encoding/json"
)

// SnpnInfo struct for SnpnInfo
type SnpnInfo struct {
	SnpnId *SnpnId `json:"snpnId,omitempty"`
	Snssai *Snssai `json:"snssai,omitempty"`
}

// NewSnpnInfo instantiates a new SnpnInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnpnInfo() *SnpnInfo {
	this := SnpnInfo{}
	return &this
}

// NewSnpnInfoWithDefaults instantiates a new SnpnInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnpnInfoWithDefaults() *SnpnInfo {
	this := SnpnInfo{}
	return &this
}

// GetSnpnId returns the SnpnId field value if set, zero value otherwise.
func (o *SnpnInfo) GetSnpnId() SnpnId {
	if o == nil || isNil(o.SnpnId) {
		var ret SnpnId
		return ret
	}
	return *o.SnpnId
}

// GetSnpnIdOk returns a tuple with the SnpnId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnpnInfo) GetSnpnIdOk() (*SnpnId, bool) {
	if o == nil || isNil(o.SnpnId) {
    return nil, false
	}
	return o.SnpnId, true
}

// HasSnpnId returns a boolean if a field has been set.
func (o *SnpnInfo) HasSnpnId() bool {
	if o != nil && !isNil(o.SnpnId) {
		return true
	}

	return false
}

// SetSnpnId gets a reference to the given SnpnId and assigns it to the SnpnId field.
func (o *SnpnInfo) SetSnpnId(v SnpnId) {
	o.SnpnId = &v
}

// GetSnssai returns the Snssai field value if set, zero value otherwise.
func (o *SnpnInfo) GetSnssai() Snssai {
	if o == nil || isNil(o.Snssai) {
		var ret Snssai
		return ret
	}
	return *o.Snssai
}

// GetSnssaiOk returns a tuple with the Snssai field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnpnInfo) GetSnssaiOk() (*Snssai, bool) {
	if o == nil || isNil(o.Snssai) {
    return nil, false
	}
	return o.Snssai, true
}

// HasSnssai returns a boolean if a field has been set.
func (o *SnpnInfo) HasSnssai() bool {
	if o != nil && !isNil(o.Snssai) {
		return true
	}

	return false
}

// SetSnssai gets a reference to the given Snssai and assigns it to the Snssai field.
func (o *SnpnInfo) SetSnssai(v Snssai) {
	o.Snssai = &v
}

func (o SnpnInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.SnpnId) {
		toSerialize["snpnId"] = o.SnpnId
	}
	if !isNil(o.Snssai) {
		toSerialize["snssai"] = o.Snssai
	}
	return json.Marshal(toSerialize)
}

type NullableSnpnInfo struct {
	value *SnpnInfo
	isSet bool
}

func (v NullableSnpnInfo) Get() *SnpnInfo {
	return v.value
}

func (v *NullableSnpnInfo) Set(val *SnpnInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSnpnInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSnpnInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnpnInfo(val *SnpnInfo) *NullableSnpnInfo {
	return &NullableSnpnInfo{value: val, isSet: true}
}

func (v NullableSnpnInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnpnInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


