/*
Npcf_PolicyAuthorization Service API

PCF Policy Authorization Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Npcf_PolicyAuthorization

import (
	"encoding/json"
)

// ResourcesAllocationInfo Describes the status of the PCC rule(s) related to certain media components.
type ResourcesAllocationInfo struct {
	McResourcStatus *MediaComponentResourcesStatus `json:"mcResourcStatus,omitempty"`
	Flows []Flows `json:"flows,omitempty"`
	AltSerReq *string `json:"altSerReq,omitempty"`
}

// NewResourcesAllocationInfo instantiates a new ResourcesAllocationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourcesAllocationInfo() *ResourcesAllocationInfo {
	this := ResourcesAllocationInfo{}
	return &this
}

// NewResourcesAllocationInfoWithDefaults instantiates a new ResourcesAllocationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourcesAllocationInfoWithDefaults() *ResourcesAllocationInfo {
	this := ResourcesAllocationInfo{}
	return &this
}

// GetMcResourcStatus returns the McResourcStatus field value if set, zero value otherwise.
func (o *ResourcesAllocationInfo) GetMcResourcStatus() MediaComponentResourcesStatus {
	if o == nil || isNil(o.McResourcStatus) {
		var ret MediaComponentResourcesStatus
		return ret
	}
	return *o.McResourcStatus
}

// GetMcResourcStatusOk returns a tuple with the McResourcStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourcesAllocationInfo) GetMcResourcStatusOk() (*MediaComponentResourcesStatus, bool) {
	if o == nil || isNil(o.McResourcStatus) {
    return nil, false
	}
	return o.McResourcStatus, true
}

// HasMcResourcStatus returns a boolean if a field has been set.
func (o *ResourcesAllocationInfo) HasMcResourcStatus() bool {
	if o != nil && !isNil(o.McResourcStatus) {
		return true
	}

	return false
}

// SetMcResourcStatus gets a reference to the given MediaComponentResourcesStatus and assigns it to the McResourcStatus field.
func (o *ResourcesAllocationInfo) SetMcResourcStatus(v MediaComponentResourcesStatus) {
	o.McResourcStatus = &v
}

// GetFlows returns the Flows field value if set, zero value otherwise.
func (o *ResourcesAllocationInfo) GetFlows() []Flows {
	if o == nil || isNil(o.Flows) {
		var ret []Flows
		return ret
	}
	return o.Flows
}

// GetFlowsOk returns a tuple with the Flows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourcesAllocationInfo) GetFlowsOk() ([]Flows, bool) {
	if o == nil || isNil(o.Flows) {
    return nil, false
	}
	return o.Flows, true
}

// HasFlows returns a boolean if a field has been set.
func (o *ResourcesAllocationInfo) HasFlows() bool {
	if o != nil && !isNil(o.Flows) {
		return true
	}

	return false
}

// SetFlows gets a reference to the given []Flows and assigns it to the Flows field.
func (o *ResourcesAllocationInfo) SetFlows(v []Flows) {
	o.Flows = v
}

// GetAltSerReq returns the AltSerReq field value if set, zero value otherwise.
func (o *ResourcesAllocationInfo) GetAltSerReq() string {
	if o == nil || isNil(o.AltSerReq) {
		var ret string
		return ret
	}
	return *o.AltSerReq
}

// GetAltSerReqOk returns a tuple with the AltSerReq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourcesAllocationInfo) GetAltSerReqOk() (*string, bool) {
	if o == nil || isNil(o.AltSerReq) {
    return nil, false
	}
	return o.AltSerReq, true
}

// HasAltSerReq returns a boolean if a field has been set.
func (o *ResourcesAllocationInfo) HasAltSerReq() bool {
	if o != nil && !isNil(o.AltSerReq) {
		return true
	}

	return false
}

// SetAltSerReq gets a reference to the given string and assigns it to the AltSerReq field.
func (o *ResourcesAllocationInfo) SetAltSerReq(v string) {
	o.AltSerReq = &v
}

func (o ResourcesAllocationInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.McResourcStatus) {
		toSerialize["mcResourcStatus"] = o.McResourcStatus
	}
	if !isNil(o.Flows) {
		toSerialize["flows"] = o.Flows
	}
	if !isNil(o.AltSerReq) {
		toSerialize["altSerReq"] = o.AltSerReq
	}
	return json.Marshal(toSerialize)
}

type NullableResourcesAllocationInfo struct {
	value *ResourcesAllocationInfo
	isSet bool
}

func (v NullableResourcesAllocationInfo) Get() *ResourcesAllocationInfo {
	return v.value
}

func (v *NullableResourcesAllocationInfo) Set(val *ResourcesAllocationInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableResourcesAllocationInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableResourcesAllocationInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourcesAllocationInfo(val *ResourcesAllocationInfo) *NullableResourcesAllocationInfo {
	return &NullableResourcesAllocationInfo{value: val, isSet: true}
}

func (v NullableResourcesAllocationInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourcesAllocationInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


