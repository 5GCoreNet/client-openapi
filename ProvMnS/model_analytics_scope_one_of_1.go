/*
Provisioning MnS

OAS 3.0.1 definition of the Provisioning MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ProvMnS

import (
	"encoding/json"
)

// AnalyticsScopeOneOf1 struct for AnalyticsScopeOneOf1
type AnalyticsScopeOneOf1 struct {
	AreaScope *GeoAreaList `json:"areaScope,omitempty"`
}

// NewAnalyticsScopeOneOf1 instantiates a new AnalyticsScopeOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnalyticsScopeOneOf1() *AnalyticsScopeOneOf1 {
	this := AnalyticsScopeOneOf1{}
	return &this
}

// NewAnalyticsScopeOneOf1WithDefaults instantiates a new AnalyticsScopeOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnalyticsScopeOneOf1WithDefaults() *AnalyticsScopeOneOf1 {
	this := AnalyticsScopeOneOf1{}
	return &this
}

// GetAreaScope returns the AreaScope field value if set, zero value otherwise.
func (o *AnalyticsScopeOneOf1) GetAreaScope() GeoAreaList {
	if o == nil || isNil(o.AreaScope) {
		var ret GeoAreaList
		return ret
	}
	return *o.AreaScope
}

// GetAreaScopeOk returns a tuple with the AreaScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsScopeOneOf1) GetAreaScopeOk() (*GeoAreaList, bool) {
	if o == nil || isNil(o.AreaScope) {
    return nil, false
	}
	return o.AreaScope, true
}

// HasAreaScope returns a boolean if a field has been set.
func (o *AnalyticsScopeOneOf1) HasAreaScope() bool {
	if o != nil && !isNil(o.AreaScope) {
		return true
	}

	return false
}

// SetAreaScope gets a reference to the given GeoAreaList and assigns it to the AreaScope field.
func (o *AnalyticsScopeOneOf1) SetAreaScope(v GeoAreaList) {
	o.AreaScope = &v
}

func (o AnalyticsScopeOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AreaScope) {
		toSerialize["areaScope"] = o.AreaScope
	}
	return json.Marshal(toSerialize)
}

type NullableAnalyticsScopeOneOf1 struct {
	value *AnalyticsScopeOneOf1
	isSet bool
}

func (v NullableAnalyticsScopeOneOf1) Get() *AnalyticsScopeOneOf1 {
	return v.value
}

func (v *NullableAnalyticsScopeOneOf1) Set(val *AnalyticsScopeOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableAnalyticsScopeOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableAnalyticsScopeOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnalyticsScopeOneOf1(val *AnalyticsScopeOneOf1) *NullableAnalyticsScopeOneOf1 {
	return &NullableAnalyticsScopeOneOf1{value: val, isSet: true}
}

func (v NullableAnalyticsScopeOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnalyticsScopeOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


