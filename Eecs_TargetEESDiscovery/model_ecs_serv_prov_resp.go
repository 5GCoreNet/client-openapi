/*
ECS Target EES Discovery API

API for Target EES Discovery.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Eecs_TargetEESDiscovery

import (
	"encoding/json"
)

// ECSServProvResp ECS service provisioning response information.
type ECSServProvResp struct {
	// List of EDN configuration information.
	EdnCnfgInfo []EDNConfigInfo `json:"ednCnfgInfo"`
}

// NewECSServProvResp instantiates a new ECSServProvResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewECSServProvResp(ednCnfgInfo []EDNConfigInfo) *ECSServProvResp {
	this := ECSServProvResp{}
	this.EdnCnfgInfo = ednCnfgInfo
	return &this
}

// NewECSServProvRespWithDefaults instantiates a new ECSServProvResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewECSServProvRespWithDefaults() *ECSServProvResp {
	this := ECSServProvResp{}
	return &this
}

// GetEdnCnfgInfo returns the EdnCnfgInfo field value
func (o *ECSServProvResp) GetEdnCnfgInfo() []EDNConfigInfo {
	if o == nil {
		var ret []EDNConfigInfo
		return ret
	}

	return o.EdnCnfgInfo
}

// GetEdnCnfgInfoOk returns a tuple with the EdnCnfgInfo field value
// and a boolean to check if the value has been set.
func (o *ECSServProvResp) GetEdnCnfgInfoOk() ([]EDNConfigInfo, bool) {
	if o == nil {
    return nil, false
	}
	return o.EdnCnfgInfo, true
}

// SetEdnCnfgInfo sets field value
func (o *ECSServProvResp) SetEdnCnfgInfo(v []EDNConfigInfo) {
	o.EdnCnfgInfo = v
}

func (o ECSServProvResp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ednCnfgInfo"] = o.EdnCnfgInfo
	}
	return json.Marshal(toSerialize)
}

type NullableECSServProvResp struct {
	value *ECSServProvResp
	isSet bool
}

func (v NullableECSServProvResp) Get() *ECSServProvResp {
	return v.value
}

func (v *NullableECSServProvResp) Set(val *ECSServProvResp) {
	v.value = val
	v.isSet = true
}

func (v NullableECSServProvResp) IsSet() bool {
	return v.isSet
}

func (v *NullableECSServProvResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableECSServProvResp(val *ECSServProvResp) *NullableECSServProvResp {
	return &NullableECSServProvResp{value: val, isSet: true}
}

func (v NullableECSServProvResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableECSServProvResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


