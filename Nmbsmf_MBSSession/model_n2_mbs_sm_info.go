/*
Nmbsmf-MBSSession

MB-SMF MBSSession Service. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nmbsmf_MBSSession

import (
	"encoding/json"
)

// N2MbsSmInfo N2 MBS Session Management information
type N2MbsSmInfo struct {
	NgapIeType *NgapIeType `json:"ngapIeType,omitempty"`
	NgapData *RefToBinaryData `json:"ngapData,omitempty"`
}

// NewN2MbsSmInfo instantiates a new N2MbsSmInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewN2MbsSmInfo() *N2MbsSmInfo {
	this := N2MbsSmInfo{}
	return &this
}

// NewN2MbsSmInfoWithDefaults instantiates a new N2MbsSmInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewN2MbsSmInfoWithDefaults() *N2MbsSmInfo {
	this := N2MbsSmInfo{}
	return &this
}

// GetNgapIeType returns the NgapIeType field value if set, zero value otherwise.
func (o *N2MbsSmInfo) GetNgapIeType() NgapIeType {
	if o == nil || isNil(o.NgapIeType) {
		var ret NgapIeType
		return ret
	}
	return *o.NgapIeType
}

// GetNgapIeTypeOk returns a tuple with the NgapIeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *N2MbsSmInfo) GetNgapIeTypeOk() (*NgapIeType, bool) {
	if o == nil || isNil(o.NgapIeType) {
    return nil, false
	}
	return o.NgapIeType, true
}

// HasNgapIeType returns a boolean if a field has been set.
func (o *N2MbsSmInfo) HasNgapIeType() bool {
	if o != nil && !isNil(o.NgapIeType) {
		return true
	}

	return false
}

// SetNgapIeType gets a reference to the given NgapIeType and assigns it to the NgapIeType field.
func (o *N2MbsSmInfo) SetNgapIeType(v NgapIeType) {
	o.NgapIeType = &v
}

// GetNgapData returns the NgapData field value if set, zero value otherwise.
func (o *N2MbsSmInfo) GetNgapData() RefToBinaryData {
	if o == nil || isNil(o.NgapData) {
		var ret RefToBinaryData
		return ret
	}
	return *o.NgapData
}

// GetNgapDataOk returns a tuple with the NgapData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *N2MbsSmInfo) GetNgapDataOk() (*RefToBinaryData, bool) {
	if o == nil || isNil(o.NgapData) {
    return nil, false
	}
	return o.NgapData, true
}

// HasNgapData returns a boolean if a field has been set.
func (o *N2MbsSmInfo) HasNgapData() bool {
	if o != nil && !isNil(o.NgapData) {
		return true
	}

	return false
}

// SetNgapData gets a reference to the given RefToBinaryData and assigns it to the NgapData field.
func (o *N2MbsSmInfo) SetNgapData(v RefToBinaryData) {
	o.NgapData = &v
}

func (o N2MbsSmInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.NgapIeType) {
		toSerialize["ngapIeType"] = o.NgapIeType
	}
	if !isNil(o.NgapData) {
		toSerialize["ngapData"] = o.NgapData
	}
	return json.Marshal(toSerialize)
}

type NullableN2MbsSmInfo struct {
	value *N2MbsSmInfo
	isSet bool
}

func (v NullableN2MbsSmInfo) Get() *N2MbsSmInfo {
	return v.value
}

func (v *NullableN2MbsSmInfo) Set(val *N2MbsSmInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableN2MbsSmInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableN2MbsSmInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableN2MbsSmInfo(val *N2MbsSmInfo) *NullableN2MbsSmInfo {
	return &NullableN2MbsSmInfo{value: val, isSet: true}
}

func (v NullableN2MbsSmInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableN2MbsSmInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


