/*
3gpp-device-triggering

API for device trigger.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package DeviceTriggering

import (
	"encoding/json"
)

// DeviceTriggeringDeliveryReportNotification Represents a device triggering delivery report notification.
type DeviceTriggeringDeliveryReportNotification struct {
	// string formatted according to IETF RFC 3986 identifying a referenced resource.
	Transaction string `json:"transaction"`
	Result DeliveryResult `json:"result"`
}

// NewDeviceTriggeringDeliveryReportNotification instantiates a new DeviceTriggeringDeliveryReportNotification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceTriggeringDeliveryReportNotification(transaction string, result DeliveryResult) *DeviceTriggeringDeliveryReportNotification {
	this := DeviceTriggeringDeliveryReportNotification{}
	this.Transaction = transaction
	this.Result = result
	return &this
}

// NewDeviceTriggeringDeliveryReportNotificationWithDefaults instantiates a new DeviceTriggeringDeliveryReportNotification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceTriggeringDeliveryReportNotificationWithDefaults() *DeviceTriggeringDeliveryReportNotification {
	this := DeviceTriggeringDeliveryReportNotification{}
	return &this
}

// GetTransaction returns the Transaction field value
func (o *DeviceTriggeringDeliveryReportNotification) GetTransaction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Transaction
}

// GetTransactionOk returns a tuple with the Transaction field value
// and a boolean to check if the value has been set.
func (o *DeviceTriggeringDeliveryReportNotification) GetTransactionOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Transaction, true
}

// SetTransaction sets field value
func (o *DeviceTriggeringDeliveryReportNotification) SetTransaction(v string) {
	o.Transaction = v
}

// GetResult returns the Result field value
func (o *DeviceTriggeringDeliveryReportNotification) GetResult() DeliveryResult {
	if o == nil {
		var ret DeliveryResult
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
func (o *DeviceTriggeringDeliveryReportNotification) GetResultOk() (*DeliveryResult, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Result, true
}

// SetResult sets field value
func (o *DeviceTriggeringDeliveryReportNotification) SetResult(v DeliveryResult) {
	o.Result = v
}

func (o DeviceTriggeringDeliveryReportNotification) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["transaction"] = o.Transaction
	}
	if true {
		toSerialize["result"] = o.Result
	}
	return json.Marshal(toSerialize)
}

type NullableDeviceTriggeringDeliveryReportNotification struct {
	value *DeviceTriggeringDeliveryReportNotification
	isSet bool
}

func (v NullableDeviceTriggeringDeliveryReportNotification) Get() *DeviceTriggeringDeliveryReportNotification {
	return v.value
}

func (v *NullableDeviceTriggeringDeliveryReportNotification) Set(val *DeviceTriggeringDeliveryReportNotification) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceTriggeringDeliveryReportNotification) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceTriggeringDeliveryReportNotification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceTriggeringDeliveryReportNotification(val *DeviceTriggeringDeliveryReportNotification) *NullableDeviceTriggeringDeliveryReportNotification {
	return &NullableDeviceTriggeringDeliveryReportNotification{value: val, isSet: true}
}

func (v NullableDeviceTriggeringDeliveryReportNotification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceTriggeringDeliveryReportNotification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


