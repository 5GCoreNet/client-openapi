/*
Nadrf_DataManagement

ADRF Data Management Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nadrf_DataManagement

import (
	"encoding/json"
)

// NadrfDataStoreSubscriptionRef Contains a reference to a request for a Data or Analytics subscription.
type NadrfDataStoreSubscriptionRef struct {
	// Transaction reference identifier.
	TransRefId string `json:"transRefId"`
}

// NewNadrfDataStoreSubscriptionRef instantiates a new NadrfDataStoreSubscriptionRef object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNadrfDataStoreSubscriptionRef(transRefId string) *NadrfDataStoreSubscriptionRef {
	this := NadrfDataStoreSubscriptionRef{}
	this.TransRefId = transRefId
	return &this
}

// NewNadrfDataStoreSubscriptionRefWithDefaults instantiates a new NadrfDataStoreSubscriptionRef object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNadrfDataStoreSubscriptionRefWithDefaults() *NadrfDataStoreSubscriptionRef {
	this := NadrfDataStoreSubscriptionRef{}
	return &this
}

// GetTransRefId returns the TransRefId field value
func (o *NadrfDataStoreSubscriptionRef) GetTransRefId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransRefId
}

// GetTransRefIdOk returns a tuple with the TransRefId field value
// and a boolean to check if the value has been set.
func (o *NadrfDataStoreSubscriptionRef) GetTransRefIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.TransRefId, true
}

// SetTransRefId sets field value
func (o *NadrfDataStoreSubscriptionRef) SetTransRefId(v string) {
	o.TransRefId = v
}

func (o NadrfDataStoreSubscriptionRef) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["transRefId"] = o.TransRefId
	}
	return json.Marshal(toSerialize)
}

type NullableNadrfDataStoreSubscriptionRef struct {
	value *NadrfDataStoreSubscriptionRef
	isSet bool
}

func (v NullableNadrfDataStoreSubscriptionRef) Get() *NadrfDataStoreSubscriptionRef {
	return v.value
}

func (v *NullableNadrfDataStoreSubscriptionRef) Set(val *NadrfDataStoreSubscriptionRef) {
	v.value = val
	v.isSet = true
}

func (v NullableNadrfDataStoreSubscriptionRef) IsSet() bool {
	return v.isSet
}

func (v *NullableNadrfDataStoreSubscriptionRef) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNadrfDataStoreSubscriptionRef(val *NadrfDataStoreSubscriptionRef) *NullableNadrfDataStoreSubscriptionRef {
	return &NullableNadrfDataStoreSubscriptionRef{value: val, isSet: true}
}

func (v NullableNadrfDataStoreSubscriptionRef) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNadrfDataStoreSubscriptionRef) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


