/*
Nmfaf_3daDataManagement

MFAF 3GPP DCCF Adaptor (3DA) Data Management Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nmfaf_3daDataManagement

import (
	"encoding/json"
)

// MessageConfiguration Represents the message configuration.
type MessageConfiguration struct {
	// If the configuration is used for mapping analytics or data collection, representing the Analytics Consumer Notification Correlation ID or Data Consumer Notification Correlation ID. 
	CorreId string `json:"correId"`
	FormatInstruct *FormattingInstruction `json:"formatInstruct,omitempty"`
	MfafNotiInfo *MfafNotiInfo `json:"mfafNotiInfo,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	NotificationURI string `json:"notificationURI"`
	ProcInstruct *ProcessingInstruction `json:"procInstruct,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.  
	AdrfId *string `json:"adrfId,omitempty"`
}

// NewMessageConfiguration instantiates a new MessageConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageConfiguration(correId string, notificationURI string) *MessageConfiguration {
	this := MessageConfiguration{}
	this.CorreId = correId
	this.NotificationURI = notificationURI
	return &this
}

// NewMessageConfigurationWithDefaults instantiates a new MessageConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageConfigurationWithDefaults() *MessageConfiguration {
	this := MessageConfiguration{}
	return &this
}

// GetCorreId returns the CorreId field value
func (o *MessageConfiguration) GetCorreId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CorreId
}

// GetCorreIdOk returns a tuple with the CorreId field value
// and a boolean to check if the value has been set.
func (o *MessageConfiguration) GetCorreIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.CorreId, true
}

// SetCorreId sets field value
func (o *MessageConfiguration) SetCorreId(v string) {
	o.CorreId = v
}

// GetFormatInstruct returns the FormatInstruct field value if set, zero value otherwise.
func (o *MessageConfiguration) GetFormatInstruct() FormattingInstruction {
	if o == nil || isNil(o.FormatInstruct) {
		var ret FormattingInstruction
		return ret
	}
	return *o.FormatInstruct
}

// GetFormatInstructOk returns a tuple with the FormatInstruct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConfiguration) GetFormatInstructOk() (*FormattingInstruction, bool) {
	if o == nil || isNil(o.FormatInstruct) {
    return nil, false
	}
	return o.FormatInstruct, true
}

// HasFormatInstruct returns a boolean if a field has been set.
func (o *MessageConfiguration) HasFormatInstruct() bool {
	if o != nil && !isNil(o.FormatInstruct) {
		return true
	}

	return false
}

// SetFormatInstruct gets a reference to the given FormattingInstruction and assigns it to the FormatInstruct field.
func (o *MessageConfiguration) SetFormatInstruct(v FormattingInstruction) {
	o.FormatInstruct = &v
}

// GetMfafNotiInfo returns the MfafNotiInfo field value if set, zero value otherwise.
func (o *MessageConfiguration) GetMfafNotiInfo() MfafNotiInfo {
	if o == nil || isNil(o.MfafNotiInfo) {
		var ret MfafNotiInfo
		return ret
	}
	return *o.MfafNotiInfo
}

// GetMfafNotiInfoOk returns a tuple with the MfafNotiInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConfiguration) GetMfafNotiInfoOk() (*MfafNotiInfo, bool) {
	if o == nil || isNil(o.MfafNotiInfo) {
    return nil, false
	}
	return o.MfafNotiInfo, true
}

// HasMfafNotiInfo returns a boolean if a field has been set.
func (o *MessageConfiguration) HasMfafNotiInfo() bool {
	if o != nil && !isNil(o.MfafNotiInfo) {
		return true
	}

	return false
}

// SetMfafNotiInfo gets a reference to the given MfafNotiInfo and assigns it to the MfafNotiInfo field.
func (o *MessageConfiguration) SetMfafNotiInfo(v MfafNotiInfo) {
	o.MfafNotiInfo = &v
}

// GetNotificationURI returns the NotificationURI field value
func (o *MessageConfiguration) GetNotificationURI() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NotificationURI
}

// GetNotificationURIOk returns a tuple with the NotificationURI field value
// and a boolean to check if the value has been set.
func (o *MessageConfiguration) GetNotificationURIOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.NotificationURI, true
}

// SetNotificationURI sets field value
func (o *MessageConfiguration) SetNotificationURI(v string) {
	o.NotificationURI = v
}

// GetProcInstruct returns the ProcInstruct field value if set, zero value otherwise.
func (o *MessageConfiguration) GetProcInstruct() ProcessingInstruction {
	if o == nil || isNil(o.ProcInstruct) {
		var ret ProcessingInstruction
		return ret
	}
	return *o.ProcInstruct
}

// GetProcInstructOk returns a tuple with the ProcInstruct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConfiguration) GetProcInstructOk() (*ProcessingInstruction, bool) {
	if o == nil || isNil(o.ProcInstruct) {
    return nil, false
	}
	return o.ProcInstruct, true
}

// HasProcInstruct returns a boolean if a field has been set.
func (o *MessageConfiguration) HasProcInstruct() bool {
	if o != nil && !isNil(o.ProcInstruct) {
		return true
	}

	return false
}

// SetProcInstruct gets a reference to the given ProcessingInstruction and assigns it to the ProcInstruct field.
func (o *MessageConfiguration) SetProcInstruct(v ProcessingInstruction) {
	o.ProcInstruct = &v
}

// GetAdrfId returns the AdrfId field value if set, zero value otherwise.
func (o *MessageConfiguration) GetAdrfId() string {
	if o == nil || isNil(o.AdrfId) {
		var ret string
		return ret
	}
	return *o.AdrfId
}

// GetAdrfIdOk returns a tuple with the AdrfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConfiguration) GetAdrfIdOk() (*string, bool) {
	if o == nil || isNil(o.AdrfId) {
    return nil, false
	}
	return o.AdrfId, true
}

// HasAdrfId returns a boolean if a field has been set.
func (o *MessageConfiguration) HasAdrfId() bool {
	if o != nil && !isNil(o.AdrfId) {
		return true
	}

	return false
}

// SetAdrfId gets a reference to the given string and assigns it to the AdrfId field.
func (o *MessageConfiguration) SetAdrfId(v string) {
	o.AdrfId = &v
}

func (o MessageConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["correId"] = o.CorreId
	}
	if !isNil(o.FormatInstruct) {
		toSerialize["formatInstruct"] = o.FormatInstruct
	}
	if !isNil(o.MfafNotiInfo) {
		toSerialize["mfafNotiInfo"] = o.MfafNotiInfo
	}
	if true {
		toSerialize["notificationURI"] = o.NotificationURI
	}
	if !isNil(o.ProcInstruct) {
		toSerialize["procInstruct"] = o.ProcInstruct
	}
	if !isNil(o.AdrfId) {
		toSerialize["adrfId"] = o.AdrfId
	}
	return json.Marshal(toSerialize)
}

type NullableMessageConfiguration struct {
	value *MessageConfiguration
	isSet bool
}

func (v NullableMessageConfiguration) Get() *MessageConfiguration {
	return v.value
}

func (v *NullableMessageConfiguration) Set(val *MessageConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageConfiguration(val *MessageConfiguration) *NullableMessageConfiguration {
	return &NullableMessageConfiguration{value: val, isSet: true}
}

func (v NullableMessageConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


