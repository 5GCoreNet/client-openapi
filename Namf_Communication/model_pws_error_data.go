/*
Namf_Communication

AMF Communication Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Namf_Communication

import (
	"encoding/json"
)

// PWSErrorData Data related to PWS error included in a N2 Information Transfer failure response
type PWSErrorData struct {
	NamfCause int32 `json:"namfCause"`
}

// NewPWSErrorData instantiates a new PWSErrorData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPWSErrorData(namfCause int32) *PWSErrorData {
	this := PWSErrorData{}
	this.NamfCause = namfCause
	return &this
}

// NewPWSErrorDataWithDefaults instantiates a new PWSErrorData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPWSErrorDataWithDefaults() *PWSErrorData {
	this := PWSErrorData{}
	return &this
}

// GetNamfCause returns the NamfCause field value
func (o *PWSErrorData) GetNamfCause() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NamfCause
}

// GetNamfCauseOk returns a tuple with the NamfCause field value
// and a boolean to check if the value has been set.
func (o *PWSErrorData) GetNamfCauseOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.NamfCause, true
}

// SetNamfCause sets field value
func (o *PWSErrorData) SetNamfCause(v int32) {
	o.NamfCause = v
}

func (o PWSErrorData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["namfCause"] = o.NamfCause
	}
	return json.Marshal(toSerialize)
}

type NullablePWSErrorData struct {
	value *PWSErrorData
	isSet bool
}

func (v NullablePWSErrorData) Get() *PWSErrorData {
	return v.value
}

func (v *NullablePWSErrorData) Set(val *PWSErrorData) {
	v.value = val
	v.isSet = true
}

func (v NullablePWSErrorData) IsSet() bool {
	return v.isSet
}

func (v *NullablePWSErrorData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePWSErrorData(val *PWSErrorData) *NullablePWSErrorData {
	return &NullablePWSErrorData{value: val, isSet: true}
}

func (v NullablePWSErrorData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePWSErrorData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


