/*
Nsmf_PDUSession

SMF PDU Session Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Nsmf_PDUSession

import (
	"encoding/json"
	"fmt"
)

// PduSessionContextType Type of PDU Session information. Possible values are   - AF_COORDINATION_INFO 
type PduSessionContextType struct {
	PduSessionContextTypeAnyOf *PduSessionContextTypeAnyOf
	string *string
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *PduSessionContextType) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into PduSessionContextTypeAnyOf
	err = json.Unmarshal(data, &dst.PduSessionContextTypeAnyOf);
	if err == nil {
		jsonPduSessionContextTypeAnyOf, _ := json.Marshal(dst.PduSessionContextTypeAnyOf)
		if string(jsonPduSessionContextTypeAnyOf) == "{}" { // empty struct
			dst.PduSessionContextTypeAnyOf = nil
		} else {
			return nil // data stored in dst.PduSessionContextTypeAnyOf, return on the first match
		}
	} else {
		dst.PduSessionContextTypeAnyOf = nil
	}

	// try to unmarshal JSON data into string
	err = json.Unmarshal(data, &dst.string);
	if err == nil {
		jsonstring, _ := json.Marshal(dst.string)
		if string(jsonstring) == "{}" { // empty struct
			dst.string = nil
		} else {
			return nil // data stored in dst.string, return on the first match
		}
	} else {
		dst.string = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(PduSessionContextType)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *PduSessionContextType) MarshalJSON() ([]byte, error) {
	if src.PduSessionContextTypeAnyOf != nil {
		return json.Marshal(&src.PduSessionContextTypeAnyOf)
	}

	if src.string != nil {
		return json.Marshal(&src.string)
	}

	return nil, nil // no data in anyOf schemas
}

type NullablePduSessionContextType struct {
	value *PduSessionContextType
	isSet bool
}

func (v NullablePduSessionContextType) Get() *PduSessionContextType {
	return v.value
}

func (v *NullablePduSessionContextType) Set(val *PduSessionContextType) {
	v.value = val
	v.isSet = true
}

func (v NullablePduSessionContextType) IsSet() bool {
	return v.isSet
}

func (v *NullablePduSessionContextType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePduSessionContextType(val *PduSessionContextType) *NullablePduSessionContextType {
	return &NullablePduSessionContextType{value: val, isSet: true}
}

func (v NullablePduSessionContextType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePduSessionContextType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


