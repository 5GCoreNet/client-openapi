/*
3gpp-analyticsexposure

API for Analytics Exposure.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_AnalyticsExposure

import (
	"encoding/json"
)

// AnalyticsFailureEventInfo Represents an event for which the subscription request was not successful and including the associated failure reason. 
type AnalyticsFailureEventInfo struct {
	Event AnalyticsEvent `json:"event"`
	FailureCode AnalyticsFailureCode `json:"failureCode"`
}

// NewAnalyticsFailureEventInfo instantiates a new AnalyticsFailureEventInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnalyticsFailureEventInfo(event AnalyticsEvent, failureCode AnalyticsFailureCode) *AnalyticsFailureEventInfo {
	this := AnalyticsFailureEventInfo{}
	this.Event = event
	this.FailureCode = failureCode
	return &this
}

// NewAnalyticsFailureEventInfoWithDefaults instantiates a new AnalyticsFailureEventInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnalyticsFailureEventInfoWithDefaults() *AnalyticsFailureEventInfo {
	this := AnalyticsFailureEventInfo{}
	return &this
}

// GetEvent returns the Event field value
func (o *AnalyticsFailureEventInfo) GetEvent() AnalyticsEvent {
	if o == nil {
		var ret AnalyticsEvent
		return ret
	}

	return o.Event
}

// GetEventOk returns a tuple with the Event field value
// and a boolean to check if the value has been set.
func (o *AnalyticsFailureEventInfo) GetEventOk() (*AnalyticsEvent, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Event, true
}

// SetEvent sets field value
func (o *AnalyticsFailureEventInfo) SetEvent(v AnalyticsEvent) {
	o.Event = v
}

// GetFailureCode returns the FailureCode field value
func (o *AnalyticsFailureEventInfo) GetFailureCode() AnalyticsFailureCode {
	if o == nil {
		var ret AnalyticsFailureCode
		return ret
	}

	return o.FailureCode
}

// GetFailureCodeOk returns a tuple with the FailureCode field value
// and a boolean to check if the value has been set.
func (o *AnalyticsFailureEventInfo) GetFailureCodeOk() (*AnalyticsFailureCode, bool) {
	if o == nil {
    return nil, false
	}
	return &o.FailureCode, true
}

// SetFailureCode sets field value
func (o *AnalyticsFailureEventInfo) SetFailureCode(v AnalyticsFailureCode) {
	o.FailureCode = v
}

func (o AnalyticsFailureEventInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["event"] = o.Event
	}
	if true {
		toSerialize["failureCode"] = o.FailureCode
	}
	return json.Marshal(toSerialize)
}

type NullableAnalyticsFailureEventInfo struct {
	value *AnalyticsFailureEventInfo
	isSet bool
}

func (v NullableAnalyticsFailureEventInfo) Get() *AnalyticsFailureEventInfo {
	return v.value
}

func (v *NullableAnalyticsFailureEventInfo) Set(val *AnalyticsFailureEventInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAnalyticsFailureEventInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAnalyticsFailureEventInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnalyticsFailureEventInfo(val *AnalyticsFailureEventInfo) *NullableAnalyticsFailureEventInfo {
	return &NullableAnalyticsFailureEventInfo{value: val, isSet: true}
}

func (v NullableAnalyticsFailureEventInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnalyticsFailureEventInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


